datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    			Int			@id @default(autoincrement())
  username  		String		@unique
  password 			String
  email 			String		@unique
  avatar 			String		@default("img_avatar.png")
  status 			Boolean     @default(false)  
  wins				Int			@default(0)
  losses 			Int			@default(0)

  player 			Player?

  friends1  		Friend[] 	@relation("User1Friends")
  friends2  		Friend[] 	@relation("User2Friends")

  won				Match[]		@relation("won")
  lost				Match[]		@relation("lost")

  chat				Chat[]		@relation("chatting")

}

// user1 is the logged in user looking at their chat history with another player (user2)
model Chat {

	id 				Int			@id @default(autoincrement())
	user1Id			Int	
	user2Id			Int

	messageId		Int 		@default(autoincrement())
	messageArray	Message[]		@relation("messages")
	user			User			@relation("chatting", fields: [user1Id], references: [id])
}

model Message {
	
	id				Int			@id @default(autoincrement())
	received		String?
	sent			String?
	date			DateTime
	messageArray	Chat		@relation("messages", fields: [messageId], references: [id])
}

model Player {
    id            Int  	 @id @default(autoincrement())
    userId        Int     @unique
    x             Int @default(0)
    y             Int @default(0)

    user          User   @relation(fields: [userId], references: [id])
}

model Friend {
    id    		    Int 	 @id @default(autoincrement())    
	user1Id			Int   
	user2Id			Int 
	status		    Status
	initiator		Int
	blocker			Int

	user1     		User	@relation("User1Friends", fields: [user1Id], references: [id])
	user2     		User	@relation("User2Friends", fields: [user2Id], references: [id])
}

enum Status {
	PENDING
	FRIENDS
	BLOCKED
}

model Match {
	
	id				Int		@id @default(autoincrement())
	player1			Int
	player2			Int
	tournament		Boolean @default(false)
	winner			Int?
	loser			Int?
	status			State
	date			DateTime

	won				User?	@relation("won", fields: [winner], references: [id])
	lost			User?	@relation("lost", fields: [loser], references: [id])
}

enum State {
	INPROGRESS
	FINISHED
}
