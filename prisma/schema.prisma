// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// output   = "app/generated/prisma/client"

// todo better way to have positions (x,y) as one element?

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    			Int     @id @default(autoincrement())
  username  		String     @unique
  password 			String
  email 			String     @unique
  avatar 			String		@default("img_avatar.png")
  status 			Boolean     @default(false)  
  wins				Int @default(0)
  losses 			Int @default(0)

  player 			Player?

	// friends1 = friendships where user is user2
	// friend2 = friendships where user is user1
  friends1  Friend[] @relation("User1Friends")
  friends2  Friend[] @relation("User2Friends")

}

model Player {
    id            Int   @id @default(autoincrement())
    userId        Int     @unique
    x             Int @default(0)
    y             Int @default(0)

    user          User   @relation(fields: [userId], references: [id])
}

model Friend {
    id    		    Int 	 @id @default(autoincrement())    
	user1Id			Int   
	user2Id			Int 
	status		    Status	 @default(NO_RELATION)
	initiator		Int

	user1     		User	@relation("User1Friends", fields: [user1Id], references: [id])
	user2     		User	@relation("User2Friends", fields: [user2Id], references: [id])
}

enum Status {
	NO_RELATION
	PENDING
	SENT
	RECEIVED
	ACCEPTED
	REJECTED
	BLOCKED
}

